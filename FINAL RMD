#INTRO - SUMMARY OF LAST PROJECT
```{r NAs, echo=FALSE}
athlete_events = read.csv("athlete_events.csv")
str(athlete_events)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
```

```{r NAs, echo=FALSE}
# omitting NAs leaves only athletes that won medals
summer_events = na.omit(athlete_events[athlete_events$Season == 'Summer',])
# keeping NAs for analysis of winners and losers
summer_w_NAs = athlete_events[athlete_events$Season=='Summer',]
```

```{r , echo=FALSE, include=TRUE}
# participants over time
athlete_events_MPC = summer_w_NAs %>% group_by(Year) %>% summarise(count = n_distinct(Team))
ggplot(data=athlete_events_MPC, aes(x=Year, y=count)) +
  geom_line()+
  geom_point() + ggtitle('Number of Olympic athletes over time') + ylab('Number of participants')
```

```{r , echo=FALSE, include=TRUE}
# plot male female participants over time
group_count_mf <- summer_w_NAs %>% group_by(Year, Sex) %>%
  summarize(Athletes = length(unique(ID)))
group_count_mf$Year <- as.integer(group_count_mf$Year)
ggplot(group_count_mf, aes(x=Year, y=Athletes, group=Sex, color=Sex)) +
  geom_point(size=2) +
  geom_line()  +
  scale_color_manual(values=c("deeppink1","dodgerblue1")) +
  labs(title = "Number of male and female Olympic Athletes over time") +
  theme(plot.title = element_text(hjust = 0.5))
```

```{r , echo=FALSE, include=TRUE}
# male and female by sport
female_w_NAs = summer_w_NAs[summer_w_NAs$Sex == 'F',]
male_w_NAs = summer_w_NAs[summer_w_NAs$Sex == 'M',]
female_sport_participation = sort(table(female_w_NAs$Sport), decreasing = TRUE)
male_sport_participation = sort(table(male_w_NAs$Sport), decreasing = TRUE)
barplot(female_sport_participation[2:10], las=2, main="Number of Female Athletes by Sport", col = 'deeppink1',
        ylim = c(0,18000))
barplot(male_sport_participation[2:10], las=2, main="Number of Male Athletes by Sport", col='dodgerblue1',
        ylim = c(0,18000))
```

```{r Read, echo=FALSE, include=FALSE}
# Medals per country
medals_table = table(summer_events$Medal,summer_events$NOC)
mean(medals_table)
```

```{r Medals by country barplot, echo=FALSE, include=TRUE}
# stacked barplot of medals won by top countries
subset_medals = medals_table[,c('USA', 'URS', 'GBR', 'GER', 'ITA', 'FRA', 'AUS',
                                'CHN','HUN','JPN','NED','RUS','SWE')]
barplot(subset_medals, main = "Total medals won by country", 
        ylab = 'Country Code', xlab = "Number of medals won", col = c('gold', 'light gray','gold4'),
        legend.text = c("Gold",'Silver','Bronze'), horiz = TRUE, las=2)
```

```{r histograms, echo=FALSE, include=TRUE}
# Descriptive stats of Age, Height, Weight
par(mfrow=c(1,3))
hist(summer_w_NAs$Age, breaks = 30, main = 'Histogram of Age', xlab = 'Age', ylab = 'Frequency', col = 'rosybrown1')
#hist(f$Age, breaks = 30)
#hist(m$Age, breaks = 30)
hist(summer_w_NAs$Height, breaks = 30, main = 'Histogram of Height',xlab = 'Height(cm)', ylab = 'Frequency', col = 'darkseagreen3')
#hist(f$Height, breaks = 30)
#hist(m$Height, breaks = 30)
hist(summer_w_NAs$Weight, breaks = 30, main = 'Histogram of Weight',xlab = 'Weight(kg)', ylab = 'Frequency', col = 'lightblue3')
#hist(f$Weight, breaks = 30)
#hist(m$Weight, breaks = 30)
```

#SMART 1

```{r Read, echo=FALSE, include=FALSE}
athlete_events = read.csv("athlete_events.csv")
str(athlete_events)
```
```{r Preproccessing, echo=FALSE, include=FALSE}
# omitting NAs
# Function to 
desiredCols = c("ID","Name","Sex","Age","Height","Weight","Team","NOC","Games","Year","Season","City","Sport","Event","Medal")
completeFun <- function(athlete_events, desiredCols) {
  completeVec <- complete.cases(athlete_events[, desiredCols])
  return(athlete_events[completeVec, ])
}
# Rid NA's - Keep NA Medals
#columns minus medals
na.wmedals = c("ID","Name","Sex","Age","Height","Weight","Team","NOC","Games","Year","Season","City","Sport","Event")
# All columns
na.all = c("ID","Name","Sex","Age","Height","Weight","Team","NOC","Games","Year","Season","City","Sport","Event","Medal")
# Get rid of NA's except for 'Medal' Column
athleet_events_na.wmedals = completeFun(athlete_events, na.wmedals)
# Get rid of all NA's
athleet_events_na.all = completeFun(athlete_events, na.all)
```
```{r Summer/Winter, echo=FALSE, include=FALSE}
athlete_events_summer_na.wmedals = athleet_events_na.wmedals[ which(athleet_events_na.wmedals$Season == 'Summer'),]
summary(athlete_events_summer_na.wmedals)
athlete_events_winter_na.wmedals = athleet_events_na.wmedals[ which(athleet_events_na.wmedals$Season == 'Winter'),]
```
```{r SMART1, echo=FALSE, include=FALSE}
library(ggplot2)
library(dplyr)
library(tidyr)
### Subset Records by Team, Year, Name, Event, Medal
athlete_events_recode = athlete_events_summer_na.wmedals %>% group_by(Team , Year , Name , Event , Medal) %>% 
       summarize()
### Recode Medals into Numerical vallues
athlete_events_recode$medal_value[athlete_events_recode$Medal == "Gold"] <- 1
athlete_events_recode$medal_value[athlete_events_recode$Medal == "Silver"] <- 1
athlete_events_recode$medal_value[athlete_events_recode$Medal == "Bronze"] <- 1
athlete_events_recode$medal_value[is.na(athlete_events_recode$Medal)] <- 0
### Set Variables for FOR LOOP - Country and Host Years must match by Indicies
Countries = c("Italy", "Japan", "Mexico", "Spain","United States","Australia","Greece","China")
Host_Years = c(1960, 1964, 1968, 1992,1996,2000,2004,2008)
plot_list = c()
plot_list1 = c()
aov_list = c()
### Begin FOR LOOP - Loop Provides an Anova Table and two Graphs per Country
for(i in 1:8){
  
  ## Index of Host Country and Olympic Year
  
  Country = Countries[i]
  Host_Year = Host_Years[i]
  
  ## Set Years Surrounding the Host Year
  
  First_Year = Host_Year - 8
  Before_Year = Host_Year - 4
  After_Year = Host_Year + 4
  Last_Year = Host_Year + 8

  ### Subset table by Country
  
  athlete_events_country = athlete_events_recode[ which(athlete_events_recode$Team == Country),]

  ### Subset by First Year
  
  athlete_events_first = athlete_events_country[ which(athlete_events_country$Year == First_Year),]

  ### Subset by Before Year
  
  athlete_events_before = athlete_events_country[ which(athlete_events_country$Year == Before_Year),]

  ### Subset by Host Year 
  
  athlete_events_host = athlete_events_country[ which(athlete_events_country$Year == Host_Year),]
  
  ### Subset by after Year
  
  athlete_events_after = athlete_events_country[ which(athlete_events_country$Year == After_Year),]
  
  ### Subset by Last Year
  
  athlete_events_last = athlete_events_country[ which(athlete_events_country$Year == Last_Year),]
  
  ### Concat Before, Host and During Year based on year, country, event inner join
  
  concat = rbind(athlete_events_first, athlete_events_before)
  
  concat1 = rbind(concat, athlete_events_host)
  
  concat2 = rbind(concat1, athlete_events_after)
  
  athlete_events_5 = rbind(concat2, athlete_events_last)
  
  athlete_events_5$Year = as.factor(athlete_events_5$Year)
  
  Sum_Medals = aggregate((Medal = athlete_events_5$medal_value), by=list(Year=athlete_events_5$Year), nfrequency = 1, FUN=sum)
  Average_Medals = aggregate((Medal = athlete_events_5$medal_value), by=list(Year=athlete_events_5$Year), FUN=mean, nfrequency = 1)
  
  colnames(Sum_Medals)[2] = "Total Medals"
  colnames(Average_Medals)[2] = "Average Medals Per Event"
  
  b = aov(medal_value ~ Year,data = athlete_events_5)
  #print(summary(b))
  #print(TukeyHSD(b))
  
  aov_list[[i]] <- b
  
  Sum_Medals <- Sum_Medals %>% mutate( ToHighlight = ifelse( Sum_Medals$Year == Host_Year, "yes", "no" ) )
  
  c <- ggplot(Sum_Medals, aes(x = Year, y = Sum_Medals$"Total Medals", fill = ToHighlight)) +
    geom_bar(stat = 'identity', position = 'dodge') + ggtitle(Country) + xlab("Year") + ylab("Total Medals")+ scale_fill_manual( values = c( "yes"="gold2", "no"="dodgerblue4" ), guide = FALSE )
  
  plot_list[[i]] <- c
  #print(plot_list[[i]])
  
  Average_Medals <- Average_Medals %>% mutate( ToHighlight = ifelse( Average_Medals$Year == Host_Year, "yes", "no" ) )
  
  d <- ggplot(Average_Medals, aes(x = Year, y = Average_Medals$"Average Medals Per Event", fill = ToHighlight)) +
    geom_bar(stat = 'identity', position = 'dodge') + ggtitle(Country) + xlab("Year") + ylab("Average Medals Per Event") + scale_fill_manual( values = c( "yes"="gold2", "no"="dodgerblue4" ), guide = FALSE )

  plot_list1[[i]] <- d
  #print(plot_list1[[i]])
  
}
```
```{r AOV for SMART1, echo=FALSE, include=TRUE}
for(i in 1:8){
  
print(summary(aov_list[[i]]))
print(TukeyHSD(aov_list[[i]]))

if (i == 1){
  print("Italy")
  print("Results from the ANOVA test indicate high and slightly positive correlation between 1960 (host) and 1956 (Year before host), as well as a high and slightly positive correlation between 1960 and 1964 (Year after host). This suggests that the means of the before, host and after years are similar and slightly increasing over time. We can conclude that host year does slightly effect medals won and year after given the lower correlations between host year and 1952/1968. ")
  print("")
}
else if (i == 2 ){
  print("Japan")
  print("Results from the ANOVA test indicate high and slightly positive correlation between 1964 (host) and 1960 (Year before host), as well as a low and slightly positive correlation between 1964 and 1968 (Year after host). This suggest that the means of before and host years are similar and slightly increasing over time, while the means of host and after are dramaticall different and increasing over time. We can conclude that host year does slightly effect medals won and significantly effects the medals won in the year after host")
  print("")
}
else if (i == 3 ){
  print("Mexico")
  print("Results from the ANOVA test indicate high and slightly positive correlation between 1968 (host) and 1964 (Year before host), as well as moderate, but slightly negative correlation between 1968 and 1972 (Year after host). This suggest that the means of before and host years are similar and slightly increasing over time, while the means of host and after are dramaticall different and decreasing over time. We can conclude that host year does slightly effect medals won and significantly (but negatively) effects  the medals won in the year after host. This is an anomoly in our data.")
  print("")
}
else if (i == 4 ){
  print("Spain")
  print("Results from the ANOVA test indicate an extremely low and slightly positive correlation between 1992 (host) and 1988 (Year before host), as well as moderate and slightly positive correlation between 1992 and 1996 (Year after host). This suggest that the means of before and host years are drastically different and increasing over time, while the means of host and after are more similar and increasing over time. We can conclude that host year does extremely effect medals won  and significantly effects  the medals won in the year after host as well.")
  print("")
}
else if (i == 5 ){
  print("United States")
  print("Results from the ANOVA test indicate an extremely high and slightly positive correlation between 1996 (host) and 1992 (Year before host), as well as high and slightly positive correlation between 1992 and 1996 (Year after host). This suggest that the means of before and host years are significantly similar and increasing over time, as well as the means of host and after years. We can conclude that host year does slightly effect medals won  and also slightly effects the medals won in the year after host.")
  print("")
}
else if (i == 6 ){
    print("Australia")
  print("Results from the ANOVA test indicate an extremely high and slightly negative correlation between 2000 (host) and 1996 (Year before host), as well as high and slightly positive correlation between 2000 and 2004 (Year after host). This suggest that the means of before and host years are significantly similar and decreasing over time, while the means of the host and after years are significantly similar, but increasing over time. We can conclude that host year does not effect medals won and the host year also does not effect the medals won in the year after host.This is an anomoly in our data.")
  print("")
}
else if (i == 7 ){
    print("Greece")
  print("Results from the ANOVA test indicate an moderate and slightly negative correlation between 2004 (host) and 2000 (Year before host), as well as high and slightly negative correlation between 2004 and 2008 (Year after host). This suggest that the means of before and host years are significantly different and decreasing over time, as well as the means of host and after years (although these means are more similar). We can conclude that host year does not effect medals won and the host year also does not effect the medals won in the year after host. Although one could make an argument that knowing they had a host year coming up Greece was galvanized and therefore won more medals in the year before.")
  print("")
}
else if (i == 8 ){
      print("China")
  print("Results from the ANOVA test indicate an low and slightly positive correlation between 2008 (host) and 2004 (Year before host), as well as high and slightly positive correlation between 2008 and 2012 (Year after host). This suggest that the means of before and host years are significantly different and increasing over time and the means of host and after years are significantly similar and increasing over time. We can conclude that host year does significantly effect medals won and the host year slighlty effects the medals won in the year after host. China also shows that their medal winning streak continues for at least two years after their host. Hosting may have galvanized the people or government into a higher Olympic participation.")
  print("")
}




}





```
```{r Plots for SMART1, echo=FALSE, include=TRUE}
for(i in 1:8){

x = data.frame(plot_list[[i]][1])
y <- ggplot(x, aes(x = data.Year, y = data.Total.Medals, fill = data.ToHighlight)) +
    geom_bar(stat = 'identity', position = 'dodge') + ggtitle(Countries[i]) + xlab("Year") + ylab("Total Medals") + scale_fill_manual( values = c( "yes"="gold2", "no"="dodgerblue4" ), guide = FALSE )
print(y)

x1 = data.frame(plot_list1[[i]][1])
y1 <- ggplot(x1, aes(x = data.Year, y = data.Average.Medals.Per.Event, fill = data.ToHighlight)) +
    geom_bar(stat = 'identity', position = 'dodge') + ggtitle(Countries[i]) + xlab("Year") + ylab("Average Medals Per Event") + scale_fill_manual( values = c( "yes"="gold2", "no"="dodgerblue4" ), guide = FALSE )
print(y1)

}
```
#SMART 2

#SMART 3

#CONCLUSION
